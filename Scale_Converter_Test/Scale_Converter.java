/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Scale_Converter_Test;
import java.util.List;
import java.util.ArrayList;

//import java.text.DecimalFormat;

/**
 *
 * @author yusra
 */
public class Scale_Converter extends javax.swing.JFrame {

    /**
     * Creates new form Scale_Converter
     */
    public Scale_Converter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCalcHistory = new javax.swing.JTextArea();
        btnClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtInputValue = new javax.swing.JTextField();
        txtAnswer = new javax.swing.JTextField();
        btnSwitch = new javax.swing.JButton();
        cbInputMetric = new javax.swing.JComboBox<>();
        btnConvert = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        txtMeasurement = new javax.swing.JLabel();
        txtErrMsg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MetricScale");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtCalcHistory.setColumns(20);
        txtCalcHistory.setRows(5);
        jScrollPane1.setViewportView(txtCalcHistory);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Scale_Converter_Test/img_clear.png"))); // NOI18N
        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Centaur", 1, 48)); // NOI18N
        jLabel1.setText("Metric Scale Converter");

        txtInputValue.setBackground(new java.awt.Color(209, 232, 255));
        txtInputValue.setText("0");

        txtAnswer.setBackground(new java.awt.Color(209, 232, 255));
        txtAnswer.setText("0");

        btnSwitch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Scale_Converter_Test/img_switch.png"))); // NOI18N
        btnSwitch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSwitchActionPerformed(evt);
            }
        });

        cbInputMetric.setFont(new java.awt.Font("Centaur", 0, 18)); // NOI18N
        cbInputMetric.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose measurement:", "Feet", "Pounds", "Fahrenheit", "Meters", "Kilogramms", "Celsius" }));

        btnConvert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Scale_Converter_Test/img_convert.png"))); // NOI18N
        btnConvert.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Centaur", 1, 24)); // NOI18N
        jLabel2.setText("Input value:");

        jLabel3.setFont(new java.awt.Font("Centaur", 1, 24)); // NOI18N
        jLabel3.setText("Answer:");

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Scale_Converter_Test/img_exit.png"))); // NOI18N
        btnExit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        txtMeasurement.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(101, 101, 101))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExit)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(cbInputMetric, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(btnConvert))
                                    .addComponent(txtInputValue))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3)
                                    .addComponent(btnSwitch, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                    .addComponent(txtMeasurement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(68, 68, 68))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtErrMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(txtErrMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInputValue, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbInputMetric, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMeasurement, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnExit))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSwitch)
                                    .addComponent(btnConvert))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear)))
                .addGap(446, 446, 446))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwitchActionPerformed
        // TODO add your handling code here: switch metrics
        int indexMeasure = (int)cbInputMetric.getSelectedIndex();
        switch (indexMeasure) {
            case 1 -> {
                //Meters = Feet * 0.3048
                txtInputValue.setText("0");
                txtAnswer.setText("0");
                txtMeasurement.setText("Feet");
                txtErrMsg.setText("");
                cbInputMetric.setSelectedIndex(4);
            }
            case 4 -> {
                //Inverse Equation: Feet = Meters / 0.3048
                txtInputValue.setText("0");
                txtAnswer.setText("0");
                txtMeasurement.setText("Meters");
                txtErrMsg.setText("");
                cbInputMetric.setSelectedIndex(1);
            }
            case 2 -> {
                //Inverse Equation: Pounds = Kilograms / 0.45359237
                txtInputValue.setText("0");
                txtAnswer.setText("0");
                txtMeasurement.setText("Pounds");
                txtErrMsg.setText("");
                cbInputMetric.setSelectedIndex(5);
            }
            case 5 -> {
                //Conversion Equation: Kilograms = Pounds * 0.45359237
                txtInputValue.setText("0");
                txtAnswer.setText("0");
                txtMeasurement.setText("Kilogramms");
                txtErrMsg.setText("");
                cbInputMetric.setSelectedIndex(2);
            }
            case 3 -> {
                //Conversion Equation: Celsius = (Fahrenheit - 32) * (5/9)
                txtInputValue.setText("0");
                txtAnswer.setText("0");
                txtMeasurement.setText("Fahrenheit");
                txtErrMsg.setText("");
                cbInputMetric.setSelectedIndex(6);
            }
            case 6 -> {
                //Inverse Equation: Fahrenheit = Celsius * (9/5) + 32
                txtInputValue.setText("0");
                txtAnswer.setText("0");
                txtMeasurement.setText("Celsius");
                txtErrMsg.setText("");
                cbInputMetric.setSelectedIndex(3);
            }
            default -> {
                txtErrMsg.setText("No valid measurement has been selected!");
                txtErrMsg.setText("");
            }
        }
    }//GEN-LAST:event_btnSwitchActionPerformed

    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed
        // TODO add your handling code here: convert value
        
        /*
        List indexes: 
        0 Choose measurement:
        1 Feet
        2 Pounds
        3 Fahrenheit
        4 Meters
        5 Kilogramms
        6 Celsius
        */
        //DecimalFormat formatM = new DecimalFormat("#.00");
        int indexMeasure;
        Double conversionValue;
        Double ans = 0.00;
        //String errMsg = "";
        indexMeasure = (int)cbInputMetric.getSelectedIndex();
        conversionValue = Double.valueOf(txtInputValue.getText());
        List<String> lsCalcHist = new ArrayList<>();
//        String test = Integer.toString(convertFrom);
//        txtAnswer.setText(test);
        switch (indexMeasure) {
            case 1 -> {
                //Meters = Feet * 0.3048
                ans = conversionValue * 0.3048;
                txtMeasurement.setText("Meters");
                txtErrMsg.setText("");
            }
            case 4 -> {
                //Inverse Equation: Feet = Meters / 0.3048
                ans = conversionValue / 0.3048;
                txtMeasurement.setText("Feet");
                txtErrMsg.setText("");
            }
            case 2 -> {
                //Inverse Equation: Pounds = Kilograms / 0.45359237
                ans = conversionValue / 0.45359237;
                txtMeasurement.setText("Pounds");
                txtErrMsg.setText("");
            }
            case 5 -> {
                //Conversion Equation: Kilograms = Pounds * 0.45359237
                ans = conversionValue * 0.45359237;
                txtMeasurement.setText("Kilogramms");
                txtErrMsg.setText("");
            }
            case 3 -> {
                //Conversion Equation: Celsius = (Fahrenheit - 32) * (5/9)
                ans = (conversionValue - 32) * (5/9);
                txtMeasurement.setText("Celsius");
                txtErrMsg.setText("");
            }
            case 6 -> {
                //Inverse Equation: Fahrenheit = Celsius * (9/5) + 32
                ans = (conversionValue * (9/5)) + 32;
                txtMeasurement.setText("Fahrenheit");
                txtErrMsg.setText("");
            }
            default -> {
                txtErrMsg.setText("No valid measurement has been selected!");
                txtErrMsg.setText("");
            }
        }
        
        String history = txtCalcHistory.getText();
        String ans1 = Double.toString(ans);
        String conversion = history + "\nConvert from: " + (Double.toString(conversionValue))+ " " + cbInputMetric.getSelectedItem() + "\nConvert to: " + ans1 + " " + txtMeasurement.getText();
        //lsCalcHist.add(conversion);
        //txtAnswer.add(conversion);
        txtCalcHistory.setText(conversion);
        System.out.println(lsCalcHist);
        txtAnswer.setText(ans1);
    }//GEN-LAST:event_btnConvertActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here: clear history
        txtInputValue.setText("0");
        txtAnswer.setText("0");
        txtCalcHistory.setText("Coversion Histiory:");
        
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here: exit
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scale_Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scale_Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scale_Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scale_Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Scale_Converter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnConvert;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSwitch;
    private javax.swing.JComboBox<String> cbInputMetric;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAnswer;
    private javax.swing.JTextArea txtCalcHistory;
    private javax.swing.JLabel txtErrMsg;
    private javax.swing.JTextField txtInputValue;
    private javax.swing.JLabel txtMeasurement;
    // End of variables declaration//GEN-END:variables
}
